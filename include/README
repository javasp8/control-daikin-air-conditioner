
This directory is intended for project header files.

A header file is a file containing C declarations and macro definitions
to be shared between several project source files. You request the use of a
header file in your project source file (C, C++, etc) located in `src` folder
by including it, with the C preprocessing directive `#include'.

```src/main.c

#include "header.h"

int main (void)
{
 ...
}
```

Including a header file produces the same results as copying the header file
into each source file that needs it. Such copying would be time-consuming
and error-prone. With a header file, the related declarations appear
in only one place. If they need to be changed, they can be changed in one
place, and programs that include the header file will automatically use the
new version when next recompiled. The header file eliminates the labor of
finding and changing all the copies as well as the risk that a failure to
find one copy will result in inconsistencies within a program.

In C, the convention is to give header files names that end with `.h'.

Read more about using header files in official GCC documentation:

* Include Syntax
* Include Operation
* Once-Only Headers
* Computed Includes

https://gcc.gnu.org/onlinedocs/cpp/Header-Files.html


---

このディレクトリはプロジェクトのヘッダーファイル用です。

ヘッダーファイルとは、複数のプロジェクトソースファイル間で共有されるC宣言やマクロ定義を含むファイルです。`src`フォルダ内のプロジェクトソースファイル（C、C++など）でヘッダーファイルを使用するには、Cプリプロセッサディレクティブ`#include`を用いてインクルードします。

```src/main.c

#include 「header.h」

int main (void)
{
 ...
}
```

ヘッダーファイルのインクルードは、必要な各ソースファイルにヘッダーファイルを
コピーするのと同じ結果をもたらします。そのようなコピー作業は時間がかかり、
エラーが発生しやすいものです。ヘッダーファイルを使用すれば、関連する宣言は
一箇所にのみ記述されます。変更が必要な場合、1か所で修正すれば、
ヘッダファイルを含むプログラムは次回の再コンパイル時に自動的に
新しいバージョンを使用します。ヘッダファイルは、
すべてのコピーを探して変更する手間を省くとともに、
1つのコピーが見つからない場合にプログラム内で不整合が生じるリスクを排除します。

C言語では、ヘッダファイルの名前は `.h` で終わるようにするのが慣例です。

ヘッダファイルの使用法については、GCC公式ドキュメントで詳細を確認してください：

* インクルード構文
* インクルード操作
* ワンタイムヘッダ
* 計算によるインクルード

https://gcc.gnu.org/onlinedocs/cpp/Header-Files.html
